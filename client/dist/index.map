{"version":3,"sources":["js/admin-text-length.js","index.js"],"names":["countedFieldHolderClass","countedFieldClass","counterClass","counterFocusClass","counterMaxClass","counterAlmostMaxClass","lengthHintAttribute","lengthNoHintAttribute","AdminTextLength","input","messageElement","document","createElement","message","setAttribute","classList","add","insertAdjacentElement","parentNode","addEventListener","remove","updateCharacterCount","bind","maxLength","getAttribute","length","value","initCounters","querySelectorAll","forEach","e","hasAttribute","parentElement","querySelector"],"mappings":";;;AAsDA,IAAA,EAAA,WAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAtDA,IAAMA,EAA0B,4BAC1BC,EAAoB,qBACpBC,EAAe,uBACfC,EAAoB,6BACpBC,EAAkB,2BAClBC,EAAwB,kCACxBC,EAAsB,sBACtBC,EAAwB,yBAExBC,EAAAA,WACQC,SAAAA,EAAAA,GAAO,EAAA,KAAA,GACXC,IAAAA,EAAiBC,SAASC,cAAc,SACzCH,KAAAA,MAAQA,EACRI,KAAAA,QAAUH,EAEAI,EAAAA,aAAa,WAAY,QACzBC,EAAAA,UAAUC,IAAId,EAAc,QAErCe,EAAAA,sBAAsB,WAAYP,GAClCQ,EAAAA,WAAWH,UAAUC,IAAIhB,EAAyB,eAClDe,EAAAA,UAAUC,IAAIf,GAEdkB,EAAAA,iBAAiB,QAAS,WAAMT,OAAAA,EAAeK,UAAUC,IAAIb,KAC7DgB,EAAAA,iBAAiB,OAAQ,WAAMT,OAAAA,EAAeK,UAAUK,OAAOjB,KAC/DgB,EAAAA,iBAAiB,QAAS,KAAKE,qBAAqBC,KAAK,OA8BnE,OAAA,EAAA,IAAA,IAAA,uBA3ByB,MAAA,WACfC,IAAAA,EAAY,KAAKd,MAAMe,aAAalB,IAAwB,KAAKG,MAAMe,aAAa,aACnFC,EAAU,KAAKhB,MAAMiB,MAArBD,OAEFZ,KAAAA,QAAQa,MAAWD,EAAUF,IAAAA,EAC7BV,KAAAA,QAAQE,UAAUK,OAAOhB,EAAiBC,GAE3CoB,GAAUF,EACPV,KAAAA,QAAQE,UAAUC,IAAIZ,GAClBqB,EAASF,GAAa,IAC1BV,KAAAA,QAAQE,UAAUC,IAAIX,OAiBjC,EA7CMG,GAiCN,SAASmB,IACQhB,SAASiB,iBAA4CtB,2BAAAA,EAApE,KACOuB,QAAQ,SAACC,GACVA,EAAEC,aAAaxB,IAA0E,OAAhDuB,EAAEE,cAAcC,cAAc/B,IAI3D,IAAIM,EAAgBsB,GAC5BT,yBAIZV,SAASQ,iBAAiB,mBAAoBQ;;ACrD9C,aADA,QAAA,sBACA,QAAA","file":"index.map","sourceRoot":"../src","sourcesContent":["const countedFieldHolderClass = 'char-counted-field-holder';\nconst countedFieldClass = 'char-counted-field';\nconst counterClass = 'char-counted-counter';\nconst counterFocusClass = 'char-counted-counter-focus';\nconst counterMaxClass = 'char-counted-counter-max';\nconst counterAlmostMaxClass = 'char-counted-counter-almost-max';\nconst lengthHintAttribute = 'data-hint-maxlength';\nconst lengthNoHintAttribute = 'data-no-hint-maxlength';\n\nclass AdminTextLength {\n  constructor(input) {\n    const messageElement = document.createElement('input');\n    this.input = input;\n    this.message = messageElement;\n\n    messageElement.setAttribute('disabled', 'true');\n    messageElement.classList.add(counterClass, 'text');\n\n    input.insertAdjacentElement('afterEnd', messageElement);\n    input.parentNode.classList.add(countedFieldHolderClass, 'input-group');\n    input.classList.add(countedFieldClass);\n\n    input.addEventListener('focus', () => messageElement.classList.add(counterFocusClass));\n    input.addEventListener('blur', () => messageElement.classList.remove(counterFocusClass));\n    input.addEventListener('input', this.updateCharacterCount.bind(this));\n  }\n\n  updateCharacterCount() {\n    const maxLength = this.input.getAttribute(lengthHintAttribute) || this.input.getAttribute('maxlength');\n    const {length} = this.input.value;\n\n    this.message.value = `${length}/${maxLength}`;\n    this.message.classList.remove(counterMaxClass, counterAlmostMaxClass);\n\n    if (length >= maxLength) {\n      this.message.classList.add(counterMaxClass);\n    } else if (length / maxLength >= 0.8) {\n      this.message.classList.add(counterAlmostMaxClass);\n    }\n  }\n}\n\nfunction initCounters() {\n  const inputs = document.querySelectorAll(`input[maxlength], input[${lengthHintAttribute}]`);\n  inputs.forEach((e) => {\n    if (e.hasAttribute(lengthNoHintAttribute) || e.parentElement.querySelector(counterClass) !== null) {\n      return;\n    }\n\n    const counter = new AdminTextLength(e);\n    counter.updateCharacterCount();\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', initCounters);\n","import './sass/styles.scss';\nimport './js/admin-text-length.js';\n"]}